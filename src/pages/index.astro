---
import Layout from "../layout/layout.astro";
import type { PokemonList } from "../interfaces/pokemon-list.interface";
import PokemonCard from "../components/pokemon/PokemonCard.astro";
const res = await fetch("https://pokeapi.co/api/v2/pokemon");

const data = (await res.json()) as PokemonList;
---

<Layout title="home">
  <div class="hero min-h-screen">
    <div class="hero-content text-center">
      <div class="max-w-xxl">
        <h1
        class="mb-4 text-3xl font-extrabold  md:text-5xl lg:text-6xl"
      >
        <span
          class="text-transparent bg-clip-text bg-gradient-to-r to-emerald-600 from-sky-400"
          >Astro framework</span
        > exploration with Pokémon API Integration
      </h1>
      <p
      class="text-lg font-normal text-gray-500 lg:text-xl dark:text-gray-400 text-center"
    >
      This project involves learning about the Astro framework while integrating
      data from a Pokémon API. By exploring Astro's capabilities in building web
      applications, alongside extracting and displaying Pokémon data
      dynamically, this endeavor aims to blend technical skill development with
      thematic creativity.
    </p>
        
      </div>
    </div>
  </div>
  <section class="flex flex-col items-center mt-[200px] bg-base-300 p-10 rounded-3xl mx-8 shadow-2xl">
    <h2
      class="mb-10 text-4xl font-extrabold leading-none tracking-tight text-gray-900 md:text-5xl lg:text-6xl dark:text-white"
    >
      List of pokemons
    </h2>
    <ul class="grid grid-cols-1 sm:grid-cols-5 md:grid-cols-5 gap-4">
      {
        data.results.map((pokemon) => (
          <PokemonCard name={pokemon.name} url={pokemon.url} />
        ))
      }
    </ul>
  </section>
</Layout>
